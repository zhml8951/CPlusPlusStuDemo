#include <array>
#include <iostream>

/*
 * 1. 数组内存的存储方式：
	*a: 在java中，数组初始是引用类型，存于堆上。 这是固定的。 内存管理由jvm自动处理。 
	*b: C++中，数组有静态与动态两类。 
	* 静态数组：char ch[NUM]这里的NUM必须是常量。也就是编译时即可确定的。静态数组是在栈上分配， 静态数组使用sizeof可得实际占用内存容量
	* 动态数组：使用new, malloc在堆上分配， 指向数组的指针使用sizeof得到是指针大小。 
	* 全局数组：存储于静态区(常量区)
	* 指针数组：本质还是一个数组，数组中每个元素都是一个指针。 char* pArray[10] 这里[] 运算优先级比*高，故pArray先与[]结合，是一个数组， 数组元素都是指针
	* 当数组作为函数的参数传递时，自动退化为同类型指针， 指向第一个元素。
	* 数组名与指针一样，都是指向元素的，通常指针是指针变量，而数组名是指针常量，它始终指向数组第一个元素。
	* 目前的理解是二级指针int** p 等价于int* p[];
 */
